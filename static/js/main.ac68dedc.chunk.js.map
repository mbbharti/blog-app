{"version":3,"sources":["features/UserSlice.js","components/Blogs.js","components/HomePage.js","components/Navbar.js","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["userSlice","createSlice","name","initialState","isSignedIn","userData","searchInput","blogData","reducers","setSignedIn","state","action","payload","setUserData","setInput","setBlogData","actions","selectSignedIn","user","selectUserData","selectUserInput","Blogs","useSelector","url","dispatch","useDispatch","useState","blogs","setBlogs","loading","setLoading","useEffect","axios","get","then","response","data","catch","err","console","log","className","articles","map","blog","href","target","src","image","alt","title","source","publishedAt","description","totalArticles","HomePage","login","profileObj","style","display","clientId","render","renderProps","onClick","disabled","onSuccess","onFailure","cookiePolicy","Navbar","inputValue","setInputValue","placeholder","value","onChange","e","preventDefault","Avatar","imageUrl","givenName","onLogoutSuccess","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","userReducer","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.ac68dedc.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst userSlice = createSlice({\r\n    name:'user',\r\n    initialState:{\r\n        isSignedIn:false,\r\n        userData:null,\r\n        searchInput:'tech',\r\n        blogData:null\r\n    },\r\n    reducers:{\r\n        setSignedIn : (state,action)=>{\r\n            state.isSignedIn=action.payload;\r\n        },\r\n        setUserData : (state,action) =>{\r\n            state.userData = action.payload;\r\n        },\r\n        setInput : (state,action)=>{\r\n            state.searchInput = action.payload;\r\n        },\r\n        setBlogData : (state,action)=>{\r\n            state.blogData = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {setSignedIn,setUserData,setInput,setBlogData} = userSlice.actions;\r\n\r\nexport const selectSignedIn = (state) => state.user.isSignedIn;\r\nexport const selectUserData = (state) => state.user.userData;\r\nexport const selectUserInput  = (state) => state.user.searchInput;\r\nexport const selectBlogPost = (state) => state.user.blogData;\r\n\r\nexport default userSlice.reducer;","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectUserInput, setBlogData } from '../features/UserSlice'\r\nimport '../styling/blogs.css';\r\n\r\nconst Blogs = () => {\r\n    const searchInput = useSelector(selectUserInput);\r\n    const url = `https://gnews.io/api/v4/search?q=${searchInput}&token=af88b5cdfc6ee4b43a16885ce839dcc5`;\r\n    const dispatch = useDispatch();\r\n\r\n    const [blogs,setBlogs] = useState();\r\n    const [loading,setLoading] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        axios\r\n            .get(url)\r\n            .then((response)=>{\r\n                dispatch(setBlogData(response.data));\r\n                setBlogs(response.data);\r\n                setLoading(false);\r\n            })\r\n            .catch((err)=>{\r\n                console.log(\"error - \",err);\r\n            })\r\n    },[searchInput]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"blog__page\">\r\n                <h1 className=\"blog__page__header\">Blogs</h1>\r\n                {loading ? <h1 className=\"loading\">Loading..</h1> : \"\"}\r\n                <div className=\"blogs\">\r\n                    {blogs?.articles?.map((blog)=>(\r\n                        <a href={blog.url} target='_blank' className=\"blog\">\r\n                            <img src={blog.image} alt={blog.title} />\r\n                            <div>\r\n                                <h3 className=\"sourceName\">\r\n                                    <span>{blog.source.name}</span>\r\n                                    <p>{blog.publishedAt}</p>\r\n                                </h3>\r\n                                <h1>{blog.title}</h1>\r\n                                <p>{blog.description}</p>\r\n                            </div>\r\n                        </a>\r\n                    ))}\r\n                    {blogs?.totalArticles == 0 && (\r\n                        <h1 className=\"no__blogs\">\r\n                            No Blogs Available for your Searched Input,Please Try Again with some Valid Input.\r\n                        </h1>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Blogs\r\n","import React from 'react'\r\nimport GoogleLogin from 'react-google-login';\r\nimport { VscBook } from \"react-icons/vsc\";\r\nimport { AiFillGoogleCircle } from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {selectSignedIn, selectUserData, setSignedIn, setUserData} from '../features/UserSlice';\r\nimport '../styling/home.css';\r\n\r\nconst HomePage = () => {\r\n    const dispatch = useDispatch();\r\n    const login = (response)=>{\r\n        console.log(response);\r\n        dispatch(setSignedIn(true));\r\n        dispatch(setUserData(response.profileObj));\r\n    }\r\n\r\n    const isSignedIn = useSelector(selectSignedIn);\r\n\r\n    return (\r\n        <>\r\n        <div className=\"home__page\" style={{display:isSignedIn ? 'none' : \"\"}} >\r\n            {\r\n                !isSignedIn ? (\r\n                    <div className=\"login__message\">\r\n                <h2>\r\n                    <VscBook />\r\n                </h2>\r\n                <h1>A Readers Favorite Place!  </h1>\r\n                <p>We provide high quality of online resources for reading Blogs,Just login and start reading some Awesome Content.</p>\r\n                <GoogleLogin\r\n                    clientId=\"891670107264-v16ar4ui9jvv48bvu071kb4tpa0sm85v.apps.googleusercontent.com\"\r\n                    render = {(renderProps) =>(\r\n                        <button\r\n                            onClick={renderProps.onClick}\r\n                            disabled={renderProps.disabled}\r\n                            className='login__button'\r\n                        >\r\n                            Login with Google <AiFillGoogleCircle />\r\n                        </button>    \r\n                    )}\r\n                    onSuccess={login}\r\n                    onFailure={login}\r\n                    isSignedIn={true}\r\n                    cookiePolicy={'single_host_origin'}\r\n                 />   \r\n            </div>\r\n                ) : \r\n                \"\"\r\n            }\r\n        </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import { Avatar } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {selectSignedIn, selectUserData, setInput, setSignedIn, setUserData} from '../features/UserSlice';\r\nimport '../styling/navbar.css';\r\n\r\nconst Navbar = () => {\r\n    const [inputValue,setInputValue] = useState('tech');\r\n    const isSignedIn = useSelector(selectSignedIn);\r\n    const userData = useSelector(selectUserData);\r\n    const dispatch = useDispatch();\r\n    const logout = (response)=>{\r\n        dispatch(setSignedIn(false));\r\n        dispatch(setUserData(null));\r\n    }\r\n    const handleClick = (e)=>{\r\n        e.preventDefault();\r\n        dispatch(setInput(inputValue));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"navbar\">\r\n                <h1 className=\"navbar__header\">\r\n                    BlogPost\r\n                </h1>\r\n                {isSignedIn && (\r\n                    <div className=\"blog__search\">\r\n                        <input\r\n                            className='search'\r\n                            placeholder='Search for a Blog'\r\n                            value={inputValue}\r\n                            onChange = {(e)=> setInputValue(e.target.value)}\r\n                         />\r\n                        <button className=\"submit\" onClick={handleClick}>\r\n                             Search\r\n                        </button>   \r\n                    </div>\r\n                ) }\r\n                {\r\n                    isSignedIn ? (\r\n                        <div className=\"navbar__user__data\">\r\n                            <Avatar className='user' src={userData?.imageUrl} alt={userData?.name} />\r\n                            <h1 className=\"signedIn\">{userData?.givenName}</h1>\r\n                            <GoogleLogout\r\n                                 clientId=\"891670107264-v16ar4ui9jvv48bvu071kb4tpa0sm85v.apps.googleusercontent.com\"\r\n                                 render = {(renderProps) =>(\r\n                                    <button\r\n                                        onClick={renderProps.onClick}\r\n                                        disabled={renderProps.disabled}\r\n                                        className='logout__button'\r\n                                    >\r\n                                        LogOut\r\n                                    </button>    \r\n                                )}\r\n                                onLogoutSuccess={logout}\r\n                                /> \r\n                        </div>\r\n                    ) : (\r\n                        <h1 className=\"notSignedIn\">User Not Available</h1>\r\n                    )\r\n                }\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Blogs from './components/Blogs';\nimport HomePage from './components/HomePage';\nimport Navbar from './components/Navbar';\nimport { selectSignedIn } from './features/UserSlice';\nimport './styling/app.css';\n\nfunction App() {\n  const isSignedIn = useSelector(selectSignedIn);\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <HomePage />\n      {isSignedIn && <Blogs />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from '@reduxjs/toolkit';\r\nimport userReducer from '../features/UserSlice';\r\n\r\nexport default configureStore({\r\n    reducer:{\r\n        user:userReducer,\r\n    }\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './app/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}